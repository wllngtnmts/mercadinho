//Mascara do formulário de cadastro
if(document.querySelector("#cpf")){VMasker(document.querySelector("#cpf")).maskPattern("999.999.999-99");}
if(document.querySelector("#dataNascimento")){VMasker(document.querySelector("#dataNascimento")).maskPattern("99/99/9999");}

function getRoot()
{
    var root=window.location.protocol+"//"+document.location.hostname+"/mercadinho/";
    return root;
}


//Get height total document
function getHeight()
{
    const body = document.body,
        html = document.documentElement;
    const height = Math.max( body.scrollHeight, body.offsetHeight,
        html.clientHeight, html.scrollHeight, html.offsetHeight );
    return height;
}

//Get Top Scroll
function getTop()
{
    const doc = document.documentElement;
    const left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    const top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);
    return top;
}


function getCaptcha()
{
    grecaptcha.ready(function() {
        grecaptcha.execute('6Lc1FNkUAAAAAIyDjH4wQYiVD1fSJx3mQVoSS5ZZ', {action: 'homepage'}).then(function(token) {
            const gRecaptchaResponse=document.querySelector("#g-recaptcha-response").value=token;
        });
    });
};
if(document.querySelector("#g-recaptcha-response")){
    getCaptcha();
}

//Ajax do formulário de cadastro!
$("#formCadastro").on("submit",function(event){
    event.preventDefault(); //Evita o refresh da pagina
    var dados=$(this).serialize(); //Todos os dados do input

    $.ajax({
        url: getRoot()+'controllers/controllerCadastro',
        type: 'post',
        dataType: 'json',
        data: dados,
        success: function (response) {
            $('.retornoCad').empty().show();
            if(response.retorno == 'erro'){
                $.each(response.erros,function(key,value){
                    $('.retornoCad').append(value+'');
                    $('.retornoCad').addClass('error');
                    $('.retornoCad').removeClass('success');
                });
            }else{
                $('.retornoCad').append('Dados inseridos com sucesso!');
                $('.retornoCad').addClass('success');
                $('.retornoCad').removeClass('error');
                $('#formCadastro')[0].reset();
                document.querySelector('.cadastroForms').style.display = 'none';
                setTimeout(function () {
                    window.location.href = getRoot()+'login';
                },5000);
                //window.location.href=getRoot()+"nomedapagina";
            }
            setTimeout(function () {
                $('.retornoCad').hide();
            },5000);
            getCaptcha();
        }
    });
});

//Ajax do formulário Atualizar Senha!
$("#formAtualizarSenha").on("submit",function(event){
    event.preventDefault(); //Evita o refresh da pagina
    var dados=$(this).serialize(); //Todos os dados do input

    $.ajax({
        url: getRoot()+'controllers/controllerAtualizarSenha',
        type: 'post',
        dataType: 'json',
        data: dados,
        success: function (response) {
            $('.retornoCad').empty().show();
            if(response.retorno == 'erro'){
                $.each(response.erros,function(key,value){
                    $('.retornoCad').append(value+'');
                    $('.retornoCad').addClass('error');
                    $('.retornoCad').removeClass('success');
                });
            }else{
                $('.retornoCad').append('Senha alterada com sucesso!');
                $('.retornoCad').addClass('success');
                $('.retornoCad').removeClass('error');
                $('#formAtualizarSenha')[0].reset();
                //window.location.href=getRoot()+"nomedapagina";
            }
            setTimeout(function () {
                $('.retornoCad').hide();
            },5000);
            getCaptcha();
        }
    });
});


//Ajax do email usuário formulário Atualizar Senha!
$("#formRevisarPalavraPasse").on("submit",function(event){
    event.preventDefault(); //Evita o refresh da pagina
    var dados=$(this).serialize(); //Todos os dados do input

    $.ajax({
        url: getRoot()+'controllers/controllerRevisarMeuPasse',
        type: 'post',
        dataType: 'json',
        data: dados,
        success: function (response) {
            if(response.retorno == 'success') {
                $('.retornoRevisarPalavraPasse').html("PALAVRA PASSE ATUALIZADA COM SUCESSO!");
                document.querySelector('.revisarPalavraPasseForm').style.display = 'none';
                setTimeout(function () {
                    window.location.href = getRoot()+'login';
                },5000);
                getCaptcha();
            }else{
                getCaptcha();
                $.each(response.erros,function (key,value) {
                    $('.retornoRevisarPalavraPasse').append(value+'<br>');
                });
            }
            $('.retornoRevisarPalavraPasse').empty().show();
            if(response.retorno == 'erro'){
                $.each(response.erros,function(key,value){
                    $('.retornoRevisarPalavraPasse').append(value+'');
                    $('.retornoRevisarPalavraPasse').addClass('error');
                    $('.retornoRevisarPalavraPasse').removeClass('success');
                });
            }else{
                $('.retornoRevisarPalavraPasse').append('Senha alterada com sucesso!');
                $('.retornoRevisarPalavraPasse').addClass('success');
                $('.retornoRevisarPalavraPasse').removeClass('error');
                $('#formRevisarPalavraPasse')[0].reset();
                //window.location.href=getRoot()+"nomedapagina";
            }
            setTimeout(function () {
                $('.retornoRevisarPalavraPasse').hide();
            },5000);
            getCaptcha();
        }
    });
});


//Ajax do formulário de login!
$("#formLogin").on("submit",function(event){
    event.preventDefault(); //Evita o refresh da pagina
    var dados=$(this).serialize(); //Todos os dados do input

    $.ajax({
        url: getRoot()+'controllers/controllerLogin',
        type: 'post',
        dataType: 'json',
        data: dados,
        success: function (response) {
           if (response.retorno == 'success'){
                window.location.href=response.page;
           }else{
                getCaptcha();
                if (response.tentativas == true){
                    $('.loginFormulario').hide();
                }
                $('.resultadoFormLogin').empty();
                $.each(response.erros,function (key,value) {
                    $('.resultadoFormLogin').append(value+'<br>');
                })
           }
        }
    });
});

//CapsLock
$("#senha").keypress(function (e) {
    kc=e.keyCode?e.keyCode:e.which;
    sk=e.shiftKey?e.shiftKey:((kc==16)?true:false);
    if ((kc>=65 && kc<90 && !sk)||(kc>=97 && kc<=122)&&sk){
        $('.resultadoFormLogin').html("Caps Lock Ligado")
    }else{
        $('.resultadoFormLogin').empty();
    }
})


//Show dash nav
if(document.querySelector('#button-mob-admin')){
    let btnMob=document.querySelector('#button-mob-admin');
    btnMob.addEventListener('click',function (event) {
        let dashNav=document.querySelector('.dash-nav ul');
        if(event.target.dataset.func == null){
            dashNav.style.display='grid';
            event.target.dataset.func='close';
        }else{
            dashNav.style.display='none';
            event.target.removeAttribute('data-func');
        }
    },false);
}




//Acordeon
let acc = document.getElementsByClassName("accordion");
let i;

for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
        /* Toggle between adding and removing the "active" class,
        to highlight the button that controls the painel */
        this.classList.toggle("active");

        /* Toggle between hiding and showing the active painel */
        var painel = this.nextElementSibling;
        if (painel.style.display === "block") {
            painel.style.display = "none";
        } else {
            painel.style.display = "block";
        }
    });
}


//Auto Completes
async function sendSite()
{
    let site=await fetch(
        getRoot()+"controllers/controllerSite",
        {
            method: 'POST',
            body: JSON.stringify({field:this.value})
        }
    );
    let json=await site.json();
    autocomplete(document.getElementById("site"), json);
}
if(document.querySelector('#site')){
    document.querySelector('#site').addEventListener('keyup',sendSite,false);
}

async function sendMatriz()
{
    let site=await fetch(
        getRoot()+"controllers/controllerMatriz",
        {
            method: 'POST',
            body: JSON.stringify({site:document.querySelector('#siteSel').value,field:this.value})
        }
    );
    let json=await site.json();
    autocomplete(document.getElementById("matriz"), json);
}
if(document.querySelector('#matriz')){
    document.querySelector('#matriz').addEventListener('keyup',sendMatriz,false);
}

async function sendLocal()
{
    let site=await fetch(
        getRoot()+"controllers/controllerLocal",
        {
            method: 'POST',
            body: JSON.stringify({matriz:document.querySelector('#matrizSel').value,field:this.value})
        }
    );
    let json=await site.json();
    autocomplete(document.getElementById("local"), json);
}
if(document.querySelector('#local')){
    document.querySelector('#local').addEventListener('keyup',sendLocal,false);
}

function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function(e) {
        var a, b, i, val = this.value;
        /*close any already open lists of autocompleted values*/
        closeAllLists();
        if (!val) { return false;}
        currentFocus = -1;
        /*create a DIV element that will contain the items (values):*/
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        /*append the DIV element as a child of the autocomplete container:*/
        this.parentNode.appendChild(a);
        /*for each item in the array...*/
        for (i = 0; i < arr.length; i++) {
            /*check if the item starts with the same letters as the text field value:*/
            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                /*create a DIV element for each matching element:*/
                b = document.createElement("DIV");
                /*make the matching letters bold:*/
                b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                b.innerHTML += arr[i].substr(val.length);
                /*insert a input field that will hold the current array item's value:*/
                b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                /*execute a function when someone clicks on the item value (DIV element):*/
                b.addEventListener("click", function(e) {
                    /*insert the value for the autocomplete text field:*/
                    inp.value = this.getElementsByTagName("input")[0].value;
                    /*close the list of autocompleted values,
                    (or any other open lists of autocompleted values:*/
                    closeAllLists();
                });
                a.appendChild(b);
            }
        }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function(e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
            /*If the arrow DOWN key is pressed,
            increase the currentFocus variable:*/
            currentFocus++;
            /*and and make the current item more visible:*/
            addActive(x);
        } else if (e.keyCode == 38) { //up
            /*If the arrow UP key is pressed,
            decrease the currentFocus variable:*/
            currentFocus--;
            /*and and make the current item more visible:*/
            addActive(x);
        } else if (e.keyCode == 13) {
            /*If the ENTER key is pressed, prevent the form from being submitted,*/
            e.preventDefault();
            if (currentFocus > -1) {
                /*and simulate a click on the "active" item:*/
                if (x) x[currentFocus].click();
            }
        }
    });
    function addActive(x) {
        /*a function to classify an item as "active":*/
        if (!x) return false;
        /*start by removing the "active" class on all items:*/
        removeActive(x);
        if (currentFocus >= x.length) currentFocus = 0;
        if (currentFocus < 0) currentFocus = (x.length - 1);
        /*add class "autocomplete-active":*/
        x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
        /*a function to remove the "active" class from all autocomplete items:*/
        for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
        }
    }
    function closeAllLists(elmnt) {
        /*close all autocomplete lists in the document,
        except the one passed as an argument:*/
        var x = document.getElementsByClassName("autocomplete-items");
        for (var i = 0; i < x.length; i++) {
            if (elmnt != x[i] && elmnt != inp) {
                x[i].parentNode.removeChild(x[i]);
            }
        }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
}
//Alerta se já existir o dado no banco
if(document.querySelector('.paniel')){
    let painel=document.querySelectorAll('.painel');
    for(let i=0; i < painel.length; i++){
            painel[i].addEventListener('click',(event)=>{
                if(event.target.parentNode.id=='siteautocomplete-list'){
                    alert('Item já cadastrado! Cadastre outro ou vá para RET.');
                    document.querySelector('#site').value='';
                }
                if(event.target.parentNode.id=='matrizautocomplete-list'){
                    alert('Item já cadastrado! Cadastre outro ou vá para RET.');
                    document.querySelector('#matriz').value='';
                    document.querySelector('#matriz').setAttribute('class','display-none');
                    let siteSel=document.querySelector('#siteSel').value='';

                }
                if(event.target.parentNode.id=='localautocomplete-list'){
                    alert('Item já cadastrado! Cadastre outro ou vá para RET.');
                    document.querySelector('#local').value='';
                    document.querySelector('#local').setAttribute('class','display-none');
                    let siteSel=document.querySelector('#matrizSel').value='';

                }
        },false);
    }
    let siteSel=document.querySelector('#siteSel');
    siteSel.addEventListener('change',(event)=>{
        if(event.target.value != ''){
            document.querySelector('#matriz').removeAttribute('class');
        }else{
            document.querySelector('#matriz').setAttribute('class','display-none');
        }
    },false);
    let matrizSel=document.querySelector('#matrizSel');
    matrizSel.addEventListener('change',(event)=>{
        if(event.target.value != ''){
            document.querySelector('#local').removeAttribute('class');
        }else{
            document.querySelector('#local').setAttribute('class','display-none');
        }
    },false);
}


//Cadastrar registros
async function sendFormSite(event,controller,input,select,divResult)
{
    event.preventDefault();
    let selectInput=(select != '')?document.querySelector(`#${select}`).value:'';

    let response=await fetch(getRoot()+`controllers/${controller}`,{
        method:'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            input:document.querySelector(`#${input}`).value,
            select: selectInput,
        })
    });
    let json=await response.json();
    let siteResult=document.querySelector(`#${divResult}`);
    siteResult.innerHTML=json.msg;
    siteResult.removeAttribute('class');
    siteResult.setAttribute('class',json.class);
    setTimeout(()=>{
        siteResult.setAttribute('class','display-none')
    },5000);
}
if(document.querySelector('#siteSel')){
    document.querySelector('#btnCadMatriz').addEventListener('click',(event)=>sendFormSite(event,'controllerMatrizC','matriz','siteSel','matriz__result'),false);
    document.querySelector('#btnCadLocal').addEventListener('click',(event)=>sendFormSite(event,'controllerLocalC','local','matrizSel','local__result'),false);
}

//Seleciona Matriz e local Matriz
async function setLocal(event,action=null)
{
    event.preventDefault();
    let response=await fetch(getRoot()+'controllers/controllerLocalS',{
        method:'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            select: event.target.value,
        })
    });
    let json=await response.json();
    let localSel = (action === null)?document.getElementById("local"):document.getElementById("localEdit");
    localSel.options.length=0;
    json.map((elem,ind,obj)=>{
        localSel.options[localSel.options.length] = new Option(elem.local, elem.id);
    });
}
if(document.querySelector('#localMatriz')){
    let matriz=document.querySelector('#localMatriz');
    matriz.addEventListener('change',setLocal,false);
}
if(document.querySelector('#localMatrizEdit')){
    let matriz=document.querySelector('#localMatrizEdit');
    matriz.addEventListener('change',(event)=>setLocal(event,'edit'),false);
}

//Seleciona Normativo e paragrafos do normativo PRO
async function setDesviosNormas(event,action=null)
{
    event.preventDefault();
    let desviParagrafo=document.querySelector('#desviParagrafo');
    desviParagrafo.options.length=0;
    desviParagrafo.style.display='block';
    let response=await fetch(getRoot()+'controllers/controllerDesviosSelect',{
        method:'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            paragrafoSelect: document.querySelector('#desviNormas').value
        })
    });
    let json=await response.json();

    if(json.length != 0){
        desviParagrafo.options[desviParagrafo.options.length] = new Option("Selecione parágrafo", "");
        json.map((elem,ind,obj)=>{
            desviParagrafo.options[desviParagrafo.options.length] = new Option(elem.desv_normas_paragra_descricao, elem.iddesv_normas_paragra);
        });
    }else{
        desviParagrafo.options[desviParagrafo.options.length] = new Option("Nenhum Resultado", "");
    }
}
if(document.querySelector('#desviNormas')){
    let matriz=document.querySelector('#desviNormas');
    matriz.addEventListener('change',setDesviosNormas,false);
}

//Seleciona Normativo e paragrafos do normativo PRO EDITE
async function setDesviosNormasEdit(event,action=null)
{
    event.preventDefault();
    let desviParagrafoEdit=document.querySelector('#desviParagrafoEdit');
    desviParagrafoEdit.options.length=0;
    desviParagrafoEdit.style.display='block';
    let response=await fetch(getRoot()+'controllers/controllerDesviosSelect',{
        method:'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            paragrafoSelect: document.querySelector('#desviNormasEdit').value
        })
    });
    let json=await response.json();

    if(json.length != 0){
        desviParagrafoEdit.options[desviParagrafoEdit.options.length] = new Option("Selecione parágrafo", "");
        json.map((elem,ind,obj)=>{
            desviParagrafoEdit.options[desviParagrafoEdit.options.length] = new Option(elem.desv_normas_paragra_descricao, elem.iddesv_normas_paragra);
        });
    }else{
        desviParagrafoEdit.options[desviParagrafoEdit.options.length] = new Option("Nenhum Resultado", "");
    }
}
if(document.querySelector('#desviNormasEdit')){
    let matriz=document.querySelector('#desviNormasEdit');
    matriz.addEventListener('change',setDesviosNormasEdit,false);
}

//Seleciona o paragrafo do normativo texto
async function setDesviosParagrafosItem(event,action=null)
{
    event.preventDefault();
    if(document.querySelector('#desviItem') != ''){
        let desviItem=document.querySelector('#desviItem');
        desviItem.options.length=0;
        desviItem.style.display='block';
    }


    let response=await fetch(getRoot()+'controllers/controllerDesviosParagrafos',{
        method: 'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            itemSelect: document.querySelector('#desviParagrafo').value
        })
    });
    let json=await response.json();

    if(json.length != 0){
        desviItem.options[desviItem.options.length] = new Option("Selecione um inciso", "");
        json.map((elem,ind,obj)=>{
            desviItem.options[desviItem.options.length] = new Option(elem.desv_tipo, elem.iddesv_tipo);
        });
    }else{
        desviItem.options[desviItem.options.length] = new Option("Nenhum Resultado", "");
    }
}

if(document.querySelector('#desviParagrafo')){
    let itemMatriz=document.querySelector('#desviParagrafo');
    itemMatriz.addEventListener('change', setDesviosParagrafosItem,false);
}

//Seleciona o paragrafo do normativo texto EDITE
async function setDesviosParagrafosItemEdit(event,action=null)
{
    event.preventDefault();
        let desviItemEdit=document.querySelector('#desviItemEdit');
        desviItemEdit.options.length=0;
        desviItemEdit.style.display='block';

    let response=await fetch(getRoot()+'controllers/controllerDesviosParagrafos',{
        method: 'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            itemSelect: document.querySelector('#desviParagrafoEdit').value
        })
    });
    let json=await response.json();

    if(json.length != 0){
        desviItemEdit.options[desviItemEdit.options.length] = new Option("Selecione um inciso", "");
        json.map((elem,ind,obj)=>{
            desviItemEdit.options[desviItemEdit.options.length] = new Option(elem.desv_tipo, elem.iddesv_tipo);
        });
    }else{
        desviItemEdit.options[desviItemEdit.options.length] = new Option("Nenhum Resultado", "");
    }
}

if(document.querySelector('#desviParagrafoEdit')){
    let itemMatriz=document.querySelector('#desviParagrafoEdit');
    itemMatriz.addEventListener('change', setDesviosParagrafosItemEdit,false);
}

//Seleção do paragra descrição
async function setDesviosItemDescricao(event, action=null)
{
    let response = await fetch(getRoot()+'controllers/controllerDesviosSearchItem',{
        method:'POST',
        headers:{
            Accept:'Application/json',
            'Content-Type':'Application/json'
        },
        body: JSON.stringify({
            itemDescritivo: document.querySelector('#desviItem').value
        })
    });
    let resposta = await response.json();
    if(document.querySelector('#desviItem').value != ''){
        document.querySelector('.desvio__CadItemDescritivo').innerHTML = resposta[0].desv_tipo_descritivo + '<br style="line-height: 0.5;">';
    }else{
        document.querySelector('.desvio__CadItemDescritivo').innerHTML = 'Inciso não selecionado' + '<br style="line-height: 0.5;">';
    }
}
if (document.querySelector('#desviItem')){
    let itemDescricao=document.querySelector('#desviItem');
    itemDescricao.addEventListener('change', setDesviosItemDescricao,false);
}

//Seleção do paragra descrição EDITE
async function setDesviosItemDescricaoEdit(event, action=null)
{
    let response = await fetch(getRoot()+'controllers/controllerDesviosSearchItem',{
        method:'POST',
        headers:{
            Accept:'Application/json',
            'Content-Type':'Application/json'
        },
        body: JSON.stringify({
            itemDescritivo: document.querySelector('#desviItemEdit').value
        })
    });
    let resposta = await response.json();
        document.querySelector('.desvio__CadItemDescritivoEdit').innerHTML = resposta[0].desv_tipo_descritivo + '<br style="line-height: 0.5;">';

}
if (document.querySelector('#desviItemEdit')){
    let itemDescricaoEdit=document.querySelector('#desviItemEdit');
    itemDescricaoEdit.addEventListener('change', setDesviosItemDescricaoEdit,false);
}

//Autocomplete do nome do funcionário
async function autoCompleteFuncionario()
{
    let nomeFuncionario=document.querySelector('#nomeFuncionario');
    let nomeFuncionarioSel=document.querySelector('#nomeFuncionarioSel');
    nomeFuncionarioSel.options.length=0;
    nomeFuncionarioSel.style.display='block';

    let response=await fetch(getRoot()+'controllers/controllerSearchNomeFuncionario',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            nome: nomeFuncionario.value
        })
    });
    let json=await response.json();
    console.log(json);
    if(json.length != 0){
        nomeFuncionarioSel.options[nomeFuncionarioSel.options.length] = new Option("Selecione", "");
        json.map((elem,ind,obj)=>{
            nomeFuncionarioSel.options[nomeFuncionarioSel.options.length] = new Option(elem.nome_completo, elem.id);
        });
    }else{
        nomeFuncionarioSel.options[nomeFuncionarioSel.options.length] = new Option("Nenhum Resultado", "");
    }
}
if(document.querySelector('#nomeFuncionario')){
    let nomeFuncionario=document.querySelector('#nomeFuncionario');
    nomeFuncionario.addEventListener('keypress',debounce(autoCompleteFuncionario,1000),false);
}



//Autocomplete da tag device frota
async function autoCompleteTagDeviceFrota()
{
    let tagDeviceFrota=document.querySelector('#tagDeviceFrota');
    let listTagDeviceFrota=document.querySelector('#listTagDeviceFrota');
    listTagDeviceFrota.options.length=0;
    listTagDeviceFrota.style.display='block';

    let requisicao=await fetch(getRoot()+'controllers/controllerTagDeviceFrota',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            tagDeviceFrota: tagDeviceFrota.value
        })
    });
    let resposta=await requisicao.json();

    if(resposta.length != 0){
        listTagDeviceFrota.options[listTagDeviceFrota.options.length] = new Option("Selecione", "");
        resposta.map((elem,ind,obj)=>{
            listTagDeviceFrota.options[listTagDeviceFrota.options.length] = new Option(elem.serialDevice, elem.idEagle);
        });
    }else{
        listTagDeviceFrota.options[listTagDeviceFrota.options.length] = new Option("Nenhum Resultado", "");
    }
}
if(document.querySelector('#tagDeviceFrota')){
    let tagDeviceFrota=document.querySelector('#tagDeviceFrota');
    tagDeviceFrota.addEventListener('keypress',debounce(autoCompleteTagDeviceFrota,1000),false);
}

//List tag Frota Desvios
async function perquisarTagFrota()
{
    let tagFrota=document.querySelector('#tagFrota');
    let listTagFrota=document.querySelector('#listTagFrota');
    listTagFrota.options.length=0;
    listTagFrota.style.display='block';

    let response=await fetch(getRoot()+'controllers/controllerDesviosTagFrotaSearch',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            tagFrotaParse: tagFrota.value
        })
    });
    let resposta=await response.json();

    if(resposta.length != 0){
        listTagFrota.options[listTagFrota.options.length] = new Option("", "");
        resposta.map((elem,ind,obj)=>{
            listTagFrota.options[listTagFrota.options.length] = new Option(elem.tagCam, elem.idCam);
        });
    }else{
        listTagFrota.options[listTagFrota.options.length] = new Option("Nenhum Resultado", "");
    }
}

//List tag Frota Desvios EDITE
async function perquisarTagFrota(e,imputTagFrota,listTagFrota)
{
    let tagFrotaEdit=document.querySelector('#'+imputTagFrota);
    let listTagFrotaEdit=document.querySelector('#'+listTagFrota);
    listTagFrotaEdit.options.length=0;
    listTagFrotaEdit.style.display='block';

    let response=await fetch(getRoot()+'controllers/controllerDesviosTagFrotaSearch',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            tagFrotaParse: tagFrotaEdit.value
        })
    });
    let resposta=await response.json();

    if(resposta.length != 0){
        listTagFrotaEdit.options[listTagFrotaEdit.options.length] = new Option("", "");
        resposta.map((elem,ind,obj)=>{
            listTagFrotaEdit.options[listTagFrotaEdit.options.length] = new Option(elem.tagCam, elem.idCam);
        });
    }else{
        listTagFrotaEdit.options[listTagFrotaEdit.options.length] = new Option("Nenhum Resultado", "");
    }
}

if (document.querySelector('#tagFrota')) {
    let tagFrota = document.querySelector('#tagFrota');
    tagFrota.addEventListener('keypress', debounce((e)=>perquisarTagFrota(e,'tagFrota','listTagFrota'), 1000), false);
}
if (document.querySelector('#tagFrotaEdit')) {
    let tagFrotaEdit = document.querySelector('#tagFrotaEdit');
    tagFrotaEdit.addEventListener('keypress', debounce((e)=>perquisarTagFrota(e,'tagFrotaEdit','listTagFrotaEdit'), 1000), false);
}


//Exibe campos após escolher o funcionário na POPUP registrar
async function getFuncionarioByMatricula(event)
{
    let response=await fetch(getRoot()+'controllers/controllerSearchMatricula',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            matricula: event.target.value
        })
    });
    let json=await response.json();
    document.querySelector('#matriculaS').value=json.data.id;
    document.querySelector('#sites').value=json.data.idGa;
    document.querySelector('#idGestor').value=json.data.idGestor;
    document.querySelector('.cadastroRetForm').style.display='grid';
    let dadosFuncionariosSel=document.querySelector('.dadosFuncionarioSel');
    dadosFuncionariosSel.style.display='grid'
    dadosFuncionariosSel.innerHTML=`<div><strong>Matrícula:</strong> ${json.data.id}</div>

    <div><strong>Nome:</strong> ${json.data.nome_completo}</div>
    <div><strong>Email:</strong> ${json.data.email}</div>
    <div><strong>Locação:</strong> ${json.data.locacao}</div>
    <div><strong>Gerência:</strong> ${json.data.nomeGerenciaArea}</div>
    <div><strong>Locação:</strong> ${json.data.nome_gestor}</div>
    `;
    let caminhaoSel=document.querySelector('#listTagFrota');
    caminhaoSel.options.length=0;
    caminhaoSel.options[caminhaoSel.options.length] = new Option("Selecione veículo", "");
    json.caminhao.map((elem,ind,obj)=>{
        caminhaoSel.options[caminhaoSel.options.length] = new Option(elem.tagCam, elem.idCam);
    });

    let response2=await fetch(getRoot()+'controllers/controllerTurno/response',{
        method:'POST',
        headers:{
            'Accept':'application/json',
            'Content-Type':'application/json',
        }
    });
    let json2=await response2.json();
    console.log(json2);
    document.querySelector('#diaTurno').value = json2.diaTurno;
    document.querySelector('#turno').value = json2.turno;

}
if(document.querySelector('#nomeFuncionarioSel')){
    let nomeFuncionarioSel=document.querySelector('#nomeFuncionarioSel');
    nomeFuncionarioSel.addEventListener('change',getFuncionarioByMatricula,false);
}


//Data mínima de filtragem
if(document.querySelector('#startDate')){
    document.querySelector('#startDate').addEventListener('blur',(event)=>{
        document.querySelector('#endDate').setAttribute('min',event.target.value);
    },false);
}


//Esconde a div de mensagem com sucesso nas permissões
if(document.querySelector('.msgPerm')){
    let msgPerm=document.querySelector('.msgPerm');
    setTimeout(()=>{msgPerm.style.display='none'},5000);
}


//Notas formulário EA
if(document.querySelector('.range')){
    let range=document.querySelectorAll('.range');
    for(let i=0; i<range.length; i++){
        range[i].addEventListener('change',(event)=>{
            document.querySelector(`.value__${event.target.name}`).innerHTML=event.target.value;
        },false);
    }
}


//Checkbox obrigatório
if(document.querySelector('#formCadastroEA')){
    let form=document.querySelector('#formCadastroEA');
    let status=false;
    let checkbox=document.querySelectorAll("input[type='checkbox']");

    form.addEventListener('submit',(event)=>{
        event.preventDefault();
        for(let i=0; i < checkbox.length; i++){
            if(checkbox[i].checked === true){status=true;}
        }
        if(status === true){
            form.submit();
        }else{
            alert('Marque pelo menos uma causa possível!')
        }
    },false);
}

//Controle de designação de supervisores
async function setRedesignar(e,imputSiteGaEdit)
{
    event.preventDefault;
    let selectGestor=document.querySelector('#'+imputSiteGaEdit)
    selectGestor.options.length=0;
    let json14 = await fetch(getRoot()+'controllers/controllerLocacaoC',{
        method:'POST',
        headers:{
            Accept:'application/json',
            'Content-Type':'application/json'
        },
        body: JSON.stringify({
            select: event.target.value,
        })
    });
    let json15 = await json14.json();
    if (json15.length != '') {
        selectGestor.options[selectGestor.options.length] = new Option("NÃO DESIGNADO", "%");
    } else {
        selectGestor.options[selectGestor.options.length] = new Option("NÃO ENCONTRADO!", "");
    }
    json15.map((elem, ind, obj)=>{
        selectGestor.options[selectGestor.options.length] = new Option(elem.idGestor+' '+elem.locacao+' => '+elem.nome_gestor, elem.idGestor);
    });
}

if(document.querySelector('#siteGa')){
    let redesignar = document.querySelector('#siteGa');
    redesignar.addEventListener('change',(e)=>setRedesignar(e,'locacao'),false);
}
if(document.querySelector('#siteGaEdit')){
    let redesignar = document.querySelector('#siteGaEdit');
    redesignar.addEventListener('change',(e)=>setRedesignar(e,'locacaoEdit'),false);
}
if(document.querySelector('#desviosSiteGaDesignarCad')){
    let redesignar = document.querySelector('#desviosSiteGaDesignarCad');
    redesignar.addEventListener('change',(e)=>setRedesignar(e,'desviosSiteGestorDesigCad'),false);
}
if(document.querySelector('#desviosSiteGaDesigEdit')){
    let redesignar = document.querySelector('#desviosSiteGaDesigEdit');
    redesignar.addEventListener('change',(e)=>setRedesignar(e,'desviosSiteGestorDesigEdit'),false);
}



//Busca de usuários
async function searchUser(event)
{
    event.preventDefault();
    let response=await fetch(getRoot()+'controllers/controllerSearchUser',{
        method:'POST',
        headers:{
            'Content-type':'application/json',
            'Accept':'application/json'
        },
        body:JSON.stringify({
            matricula: document.querySelector('#searchMatricula').value,
            name: document.querySelector('#searchName').value
        })
    });
    let json=await response.json();
    let table=document.querySelector('.tablePerm tbody');
    table.innerHTML='';
    let html='';
    json.map((elem,ind,obj)=>{
       html+=`
        <tr>
            <td>${elem.matricula}</td>
            <td>${elem.nome}</td>
            <td>${elem.permissoes}</td>
            <td>${elem.email}</td>
            <td>${elem.status}</td>
            <td>${elem.cpf}</td>
            <td>${elem.dataNascimento}</td>
            <td>${elem.createdAt}</td>
            <td>${elem.updatedAt}</td>
            <td class="cadastroRetPerm" data-matricula="${elem.matricula}" data-id="${elem.id}">`;

        if(elem.status != 'active') {
            html += `<a href="${getRoot()}controllers/controllerAtivaUser/${elem.id}"><img src="${getRoot()}img/ativar.png" alt="Ativar Usuário" class="btnPermAtivUser" data-matricula="${elem.matricula}" data-id="${elem.id}"></a>`;
        }
        html+=`<img src="${getRoot()}img/change-pass.png" alt="Trocar Senha" class="btnPermSen" data-matricula="${elem.matricula}" data-id="${elem.id}" style="margin-left: 5px;">
               <img src="${getRoot()}img/edite.png" alt="Trocar Permissão"  class="btnPerm" data-matricula="${elem.matricula}" data-id="${elem.id}" style="width: 25px; margin-left: 5px;">
               <img src="${getRoot()}img/button-trash.png" alt="Deletar"  class="btnPermDel" data-matricula="${elem.matricula}" data-id="${elem.id}" style="width: 25px; margin-left: 5px;">              
            </td>
        </tr>
        `;
    });
    table.innerHTML=html;
}
if(document.querySelector('#filterUser')){
    let filter=document.querySelector('#filterUser');
    filter.addEventListener('click',searchUser,false);
}

//Busca de tag ip
async function searchDoTagIp(event)
{
    event.preventDefault();
    let response=await fetch(getRoot()+'controllers/controllerSearchTagIp',{
        method:'POST',
        headers:{
            'Content-type':'application/json',
            'Accept':'application/json'
        },
        body:JSON.stringify({
            tag: document.querySelector('#searchTag').value,
            ip: document.querySelector('#searchIp').value


        })
    });
    let json=await response.json();

    let table=document.querySelector('.tableret tbody');
    table.innerHTML='';
    let html='';
    json.map((elem,ind,obj)=>{
        html+=`
        <tr>
            <td>${elem.updateAt}</td>
            <td>${elem.site}</td>
            <td>${elem.TagCam}</td>
            <td>${elem.serialDevice}</td>
            <td>${elem.hostIp}</td>
            <td>${elem.modeloDevice}</td>
            <td>${elem.statusHealthDevice}</td>
            <td data-id="${elem.idCam}">
                <img class="cadastroRetFrota" src="${getRoot()}img/edite.png" data-id="${elem.idCam}"  alt="Editar dados">
            </td>`;

    });
    table.innerHTML=html;
}
if(document.querySelector('#filterTagIp')){
    let filter=document.querySelector('#filterTagIp');
    filter.addEventListener('click',searchDoTagIp,false);
}

//Deletando usuário do sistema
if(document.querySelector('.btnPermDel')){
    let tablePerm=document.querySelector('.tablePerm tbody');
    tablePerm.addEventListener('click',(event)=> {
        if (event.target.className == 'btnPermDel') {
            let btnPermDel=event.target;
            if(confirm('Deseja mesmo apagar este usuário?')){
                window.location.href=getRoot()+'controllers/controllerPermDel/'+event.target.dataset.id;
            }else{
                return false;
            }
        }
    });
}


//Função debounce
function debounce(func,wait) {
    let timeout;
    return function () {
        clearTimeout(timeout);
        timeout = setTimeout(func,wait);
    }
}


//Checkbox de atribuir gestor
if(document.querySelector("#gestorExercicio")){
    let gestorExercicio=document.querySelector("#gestorExercicio");
    gestorExercicio.addEventListener('click',()=>{
        if(gestorExercicio.checked == true){
            document.querySelector(".cadastroRetInterno").style.display='grid';
        }else{
            document.querySelector(".cadastroRetInterno").style.display='none';
        }
    });
}




//Botão de esqueci minha senha
if(document.querySelector('#btnEsqueciMinhaSenha')){
    let btn = document.querySelector('#btnEsqueciMinhaSenha');
    btn.addEventListener('click',async(e)=>{
        e.preventDefault();
       let reqs = await fetch(getRoot()+'controllers/controllerEsqueciMeuPasse',{
           method:'POST',
           headers:{
               'Content-Type':'application/x-www-form-urlencoded'
           },
           body:`gRecaptchaResponse=${document.querySelector('#g-recaptcha-response').value}&cpf=${document.querySelector('#cpf').value}&email=${document.querySelector('#email').value}`
       });
       let ress = await reqs.json();
       getCaptcha();
       if(ress.retorno == 'success'){
            document.querySelector('.retornoCad').classList.add('success');
            document.querySelector('.retornoCad').classList.remove('error');
            document.querySelector('.retornoCad').innerHTML ='Enviamos um link de redefinição de senha para o email cadastrado!';
           document.querySelector('.esqueciPasseForm').style.display = 'none';
           setTimeout(function () {
               window.location.href = getRoot()+'login';
           },5000);
       }else{
           document.querySelector('.retornoCad').classList.add('error');
           document.querySelector('.retornoCad').classList.remove('success');
           let html = '';
           ress.erros.map((elem,ind,obj)=>{
               html+=elem+'<br>';
           });
           document.querySelector('.retornoCad').innerHTML = html;
           setTimeout(()=>{
               document.querySelector('.retornoCad').classList.remove('error');
               document.querySelector('.retornoCad').innerHTML= '';
           },5000);
       }
    });
}